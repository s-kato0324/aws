AWSTemplateFormatVersion: "2010-09-09"
Description: Manage myself verification environment

Parameters:
  AccountId:
    Type: String
    Description: Account ID
  ContainerName:
    Type: String
    Description: Container Name
  ClusterName:
    Type: String
    Description: Cluster Name
  ServiceName:
    Type: String
    Description: Service Name
  TargetGroupArn:
    Type: String
    Description: TargetGroup Arn
  ArtifactStoreS3:
    Type: String
    Description: S3 ArtifactStore
  GitHubConnectionArn:
    Type: String
    Description: github connection Arn
  RepositoryName:
    Type: String
    Description: github target repository Name
  BranchName:
    Type: String
    Description: github target repository branch name

Resources:
  # CodeBuildに適用するIAMRole
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SampleCodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: !Sub "arn:aws:s3:::${ArtifactStoreS3}/*"
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage

  # CodePipelineに適用するIAMRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: SamplePipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: !Sub "arn:aws:s3:::${ArtifactStoreS3}/*"
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:ListBranches
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - "codebuild:BatchGet*"
                  - codebuild:Get*
                  - codebuild:List*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - "s3:*"
                  - "ecs:*"
                  - "elasticloadbalancing:*"
                  - "autoscaling:*"
                  - iam:PassRole

  # CodeBuildの作成
  cfnTodoBackendCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Description: Codebuild by Cloudformation
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Ref AccountId
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: ap-northeast-1
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: todo-backend
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: latest
          - Name: CONTAINER_NAME
            Type: PLAINTEXT
            Value: !Ref ContainerName
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
      Name: cfn-backend-codebuild
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        BuildSpec: "buildspec.yml"
        Type: "CODEPIPELINE"

  # CodePipelineの作成
  cfnTodoBackendCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreS3
        Type: S3
      Name: cfn-todo-backend-codepipeline
      RestartExecutionOnUpdate: true
      RoleArn: !Sub arn:aws:iam::${AccountId}:role/service-role/SampleCodePipeline
      Stages:
        # Source
        - Name: Source
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Ref RepositoryName
                BranchName: !Ref BranchName
                OutputArtifactFormat: CODE_ZIP
                DetectChanges: true
              Name: SourceAction
              Namespace: String
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
        # Build
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref cfnTodoBackendCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: cfn-build-artifact
              Name: BuildAction
              RunOrder: 2
        # Deploy
        - Name: Deploy
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: 1
              Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Ref ServiceName
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: cfn-build-artifact
              Name: Deploy
              Region: ap-northeast-1
              RunOrder: 3
